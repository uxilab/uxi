{"version":3,"sources":["webpack:///../src/DropDownv2/DropDown.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","DropDown","ThemeProvider","Flex","of","box","trigger","inline","parentName","style","justifyContent","anchor","isMDXComponent"],"mappings":"kiBAUO,IAAMA,EAAe,Q,6MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,YAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,YADR,YAGA,6IACA,iBAAQ,CACN,GAAM,iBADR,iBAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,oDAAqDC,SAAO,GAC7FJ,QACAH,kBACAQ,eACAC,UACAC,aACAC,kBACAC,UAP6F,gBAQ7FZ,IAR6F,EAS7FH,eAT6F,GAU5FO,QAAQ,cACb,YAAC,IAAD,CAAeA,QAAQ,iBACf,YAAC,IAAD,CAAUA,QAAQ,eAGxB,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAeA,QAAQ,iBACzB,YAAC,IAAD,CAAOS,GAAIH,IAAUN,QAAQ,WAE3B,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,mIAAoIC,SAAO,GAC5KJ,QACAH,kBACAQ,eACAC,UACAC,aACAC,kBACAC,UAP4K,gBAQ5KZ,IAR4K,EAS5KH,eAT4K,GAU3KO,QAAQ,cACb,YAAC,IAAD,CAAeA,QAAQ,iBACrB,YAAC,IAAD,CAAUU,IAAK,sCAAwBC,QAAS,0CAA4BX,QAAQ,eAGpF,iBAAQ,CACN,GAAM,UADR,UAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,iLAAoLC,SAAO,GAC5NJ,QACAH,kBACAQ,eACAC,UACAC,aACAC,kBACAC,UAP4N,gBAQ5NZ,IAR4N,EAS5NH,eAT4N,GAU3NO,QAAQ,cACb,YAAC,IAAD,CAAeA,QAAQ,iBACrB,uBACE,oCACA,YAAC,IAAD,CAAUY,QAAQ,EAAMD,QAAS,mCAAqBD,IAAK,MAAOV,QAAQ,aAC1E,uCAIF,iBAAQ,CACN,GAAM,UADR,UAGA,kDAAiC,0BAAYa,WAAW,KAAvB,WACjC,YAAC,IAAD,CAAYZ,WAAY,EAAGC,OAAQ,4UAAuVC,SAAO,GAC/XJ,QACAH,kBACAQ,eACAC,UACAC,aACAC,kBACAC,UAP+X,gBAQ/XZ,IAR+X,EAS/XH,eAT+X,GAU9XO,QAAQ,cACb,YAAC,IAAD,CAAeA,QAAQ,iBACrB,YAAC,IAAD,CAAMc,MAAO,CACPC,eAAgB,iBACff,QAAQ,QACb,oCACA,YAAC,IAAD,CAAUgB,OAAQ,OAAQL,QAAS,mCAAqBD,IAAK,SAAUV,QAAQ,aAC/E,oCACA,YAAC,IAAD,CAAUgB,OAAQ,QAASL,QAAS,mCAAqBD,IAAK,SAAUV,QAAQ,aAChF,6C,2MAiCNH,EAAWoB,gBAAiB","file":"component---src-drop-downv-2-drop-down-mdx-fe6ffa428ee1a505d582.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/app/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport DropDown from './';\nimport ThemeProvider from '../Theme/ThemeProvider';\nimport Flex from '../Layout/Flex';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"dropdown\"\n    }}>{`DropDown`}</h1>\n    <p>{`This is a general purpose collapsible dropdown (use it for dropdown list box (select), navigation drop down list...)`}</p>\n    <h2 {...{\n      \"id\": \"default-props\"\n    }}>{`Default props`}</h2>\n    <Playground __position={0} __code={'<ThemeProvider>\\n  <DropDown />\\n</ThemeProvider>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      DropDown,\n      ThemeProvider,\n      Flex,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n          <DropDown mdxType=\"DropDown\" />\n  </ThemeProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <ThemeProvider mdxType=\"ThemeProvider\">\n  <Props of={DropDown} mdxType=\"Props\" />\n    </ThemeProvider>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={2} __code={'<ThemeProvider>\\n  <DropDown\\n    box={<div>Box content</div>}\\n    trigger={<div>trigger content</div>}\\n  />\\n</ThemeProvider>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      DropDown,\n      ThemeProvider,\n      Flex,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <DropDown box={<div>Box content</div>} trigger={<div>trigger content</div>} mdxType=\"DropDown\" />\n  </ThemeProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"inline\"\n    }}>{`Inline`}</h2>\n    <Playground __position={3} __code={'<ThemeProvider>\\n  <div>\\n    <p>Lorem ipsum</p>\\n    <DropDown inline={true} trigger={<div>Click me</div>} box={\\'Foo\\'} />\\n    <p>Lorem ipsum</p>\\n  </div>\\n</ThemeProvider>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      DropDown,\n      ThemeProvider,\n      Flex,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <div>\n      <p>Lorem ipsum</p>\n      <DropDown inline={true} trigger={<div>Click me</div>} box={'Foo'} mdxType=\"DropDown\" />\n      <p>Lorem ipsum</p>\n    </div>\n  </ThemeProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"anchor\"\n    }}>{`Anchor`}</h2>\n    <p>{`not applicable when using `}<inlineCode parentName=\"p\">{`inline`}</inlineCode></p>\n    <Playground __position={4} __code={'<ThemeProvider>\\n  <Flex style={{ justifyContent: \\'space-between\\' }}>\\n    <p>Lorem ipsum</p>\\n    <DropDown anchor={\\'left\\'} trigger={<div>Click me</div>} box={\\'foobar\\'} />\\n    <p>Lorem ipsum</p>\\n    <DropDown anchor={\\'right\\'} trigger={<div>Click me</div>} box={\\'foobar\\'} />\\n    <p>Lorem ipsum</p>\\n  </Flex>\\n</ThemeProvider>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      DropDown,\n      ThemeProvider,\n      Flex,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <Flex style={{\n          justifyContent: 'space-between'\n        }} mdxType=\"Flex\">\n      <p>Lorem ipsum</p>\n      <DropDown anchor={'left'} trigger={<div>Click me</div>} box={'foobar'} mdxType=\"DropDown\" />\n      <p>Lorem ipsum</p>\n      <DropDown anchor={'right'} trigger={<div>Click me</div>} box={'foobar'} mdxType=\"DropDown\" />\n      <p>Lorem ipsum</p>\n    </Flex>\n  </ThemeProvider>\n    </Playground>\n    {\n      /* ## Controlled\n      <Playground>\n       <WithState>\n         {\n           (state, setState) => (\n               <div>\n                 <DropDown\n                   inline\n                   open={state}\n                   onChange={(a) => {\n                     console.log('onChange onsumer a', a)\n                     setState(a)\n                   }}\n                   trigger={<div>Click me <span>({state ? 'open' : 'closed'})</span></div>}\n                   box={'whatever'}\n                 />\n                 <br/>\n                 <button onClick={() => setState(!state)} >Toggle programmatically</button>\n               </div>\n              )\n         }\n       </WithState>\n      </Playground> */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}