version: 2
jobs:
  test:
    docker:
      - image: circleci/node
    steps:
      ## checkout ##
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
      - checkout
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"

      # npm i ##
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-node_modules{{ checksum "package.json" }}
      - run: npm i
      - save_cache:
          key: source-v1-{{ .Branch }}-node_modules{{ checksum "package.json" }}
          paths:
            - "./node_modules"

      - run: npm dedupe             # because reasons, without that zopfli(jest>request) fails and all goes to hell
      - run: CI=true npm run test -- --runInBand


  publish-release:
    docker:
      - image: circleci/node
    steps:
      ## checkout ##
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
      - checkout
      # deploy can save cache becaue nothing is gonna run un parallele with it
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"

      # Write creds
      - run: echo "//registry.npmjs.org/:_authToken=$CICIMAINTAINER_NPM_TOKEN" >> ~/.npmrc
      - run: git config --global user.name $CICIMAINTAINER_NAME
      - run: git config --global user.email $CICIMAINTAINER_EMAIL

      - run: npm version patch -m "bump to v %s for release [ci skip]" ## creates the "tagged release commit"

      ## npm i ##
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-node_modules{{ checksum "package.json" }}
      - run: npm i
      # deploy can save cache becaue nothing is gonna run un parallele with it
      - save_cache:
          key: source-v1-{{ .Branch }}-node_modules{{ checksum "package.json" }}
          paths:
            - "./node_modules"

      - run: npm run pack


      - run: echo '§ publishing to npm registry...'
      # - run: npm run copy-files
      - run: npm publish build           # Let's wait to actually deploy to add this one

      - run: echo '§ pushing back to github remote...'
      - run: git add .
      - run: git diff-index --quiet HEAD || git commit --no-verify -m "published $(node -pe "require('./package.json').version") [ci skip]"
      - run: git push https://github.com/uxilab/uxi.git HEAD:master --follow-tags

  build-docz:
    machine: true
    steps:
      - checkout
      - run:
          name: build docz
          command: npm run docz
      - persist_to_workspace:
          root: ./
          paths:
            - .docz/dist

  deploy-docz:
    machine: true
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: git config --global user.name $CICIMAINTAINER_NAME
      - run: git config --global user.email $CICIMAINTAINER_EMAIL
      - run:
          name: Deploy docs to gh-pages branch
          command: npx gh-pages --dist .docz/dist

  deploy-documentation:
    docker:
      - image: circleci/node
    steps:
      ## checkout ##
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
      - checkout
      # deploy can save cache becaue nothing is gonna run un parallele with it
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"

      - run: LATEST_SHA1=$(git rev-parse HEAD)
      - run: echo "$LATEST_SHA1"
      # - run: |
      #     cat > ~/.netrc << EOF
      #     machine api.heroku.com
      #       login $HEROKU_EMAIL
      #       password $HEROKU_TOKEN
      #     machine git.heroku.com
      #       login $HEROKU_EMAIL
      #       password $HEROKU_TOKEN
      #     EOF
      # - run: chmod 600 ~/.netrc # Heroku cli complains about permissions without this
      # - run: cat ~/.netrc
      # - "[[ ! -s \"$(git rev-parse --git-dir)/shallow\" ]] || git fetch --unshallow"
      # - git push git@heroku.com:cluedintest.git $CIRCLE_SHA1:refs/heads/master
      # - git push git@heroku.com:cluedintest.git $LATEST_SHA1:refs/heads/master
      # - run: git push -f git@heroku.com:uxilab.git master:master
      - run:
          name: Deploy Master to Heroku
          command: |
            # git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
            git push -f https://heroku:$HEROKU_API_KEY@git.heroku.com/uxilab.git master


workflows:
  version: 2
  uxi-publish-deploy:
    jobs:
      - test
      - publish-release:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy-documentation:
          requires:
            - test
          filters:
            branches:
              only: master
      - build-docz:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - develop
                - feature/#121-datagridv2
      - deploy-docz:
          requires:
            - build-docz
          filters:
            branches:
              only:
                - master
                - develop
                - feature/#121-datagridv2
  # uxi-documentation-publish:
  #   jobs:
  #     - install
  #     - test:
  #         requires:
  #           - install
  #     - pack:
  #         requires:
  #           - install
      # - deployDocumentation:
      #     requires:
      #       - test
      #       - pack
      #     filters:
      #       branches:
      #         only: master
